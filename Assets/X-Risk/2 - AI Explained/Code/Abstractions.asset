%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4df6a31ec318a254eae9af3311b7aaaf, type: 3}
  m_Name: Abstractions
  m_EditorClassIdentifier: 
  narrative: The main trick is abstraction.  If you take a sequence of instructions
    that describe a broadly useful process, you can package those instructions together
    and use them as a group, without worrying about what's going on with all the
    individual steps.  It's like when you are walking, you don't think about all
    the muscles you are using, you just think about high-level stuff like where you
    are going and how fast you want to move.
  showConditionalResponses: 0
  responses:
  - node: {fileID: 11400000, guid: 3480a8017c0f3704697a4f613b5de486, type: 2}
    response: Continue
    showConditionalResponses: 0
    logicalRequirement:
      requirements: []
      invert: 0
    relationalRequirement:
      requirements: []
      invert: 0
    fallbackNode: {fileID: 0}
    fallbackResponse: 
  castChanges: []
  occasions: []
  events:
  - {fileID: 11400000, guid: 3958eab367b3f774eb964161650f6589, type: 2}
