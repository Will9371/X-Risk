%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 4df6a31ec318a254eae9af3311b7aaaf, type: 3}
  m_Name: 6c - Specification Gaming
  m_EditorClassIdentifier: 
  narrative: Sometimes it isn't possible to measure the effectiveness of a system
    directly, so you have to use proxy measures--that is, look at things associated
    with the thing you care about.  But then the system searches for ways to optimize
    the proxy, rather than what you actually want.  Sometimes, this works out, but
    other times the system finds a weird, unexpected, and undesirable solution.
  showConditionalResponses: 0
  responses:
  - node: {fileID: 11400000, guid: 09afa24741804c8499a5c81f2c53d948, type: 2}
    response: What are local minima?
    showConditionalResponses: 0
    logicalRequirement:
      requirements: []
      invert: 0
    relationalRequirement:
      requirements: []
      invert: 0
    fallbackNode: {fileID: 0}
    fallbackResponse: 
  - node: {fileID: 11400000, guid: 95a466f6a91e5a445948f7166736317a, type: 2}
    response: What does unrepresentative training mean?
    showConditionalResponses: 0
    logicalRequirement:
      requirements: []
      invert: 0
    relationalRequirement:
      requirements: []
      invert: 0
    fallbackNode: {fileID: 0}
    fallbackResponse: 
  - node: {fileID: 11400000, guid: 36b1d743c18f13c4098cd73e62832fd4, type: 2}
    response: OK, problems aside, is this how text and image generators work?
    showConditionalResponses: 0
    logicalRequirement:
      requirements: []
      invert: 0
    relationalRequirement:
      requirements: []
      invert: 0
    fallbackNode: {fileID: 0}
    fallbackResponse: 
  castChanges: []
  occasions: []
  events: []
